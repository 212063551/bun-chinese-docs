import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.9b1e551d.js";const p="/assets/bundler.84398ca6.png",h=JSON.parse('{"title":"Bun.build","description":"","frontmatter":{},"headers":[],"relativePath":"docs/bundler/index.md","filePath":"docs/bundler/index.md","lastUpdated":1696865530000}'),o={name:"docs/bundler/index.md"},e=l(`<h1 id="bun-build" tabindex="-1"><code>Bun.build</code> <a class="header-anchor" href="#bun-build" aria-label="Permalink to &quot;\`Bun.build\`&quot;">​</a></h1><p>Bun 的快速原生打包器，现在处于测试阶段。它可以通过 <code>bun build</code> CLI 命令或 Bun.build() JavaScript API 使用。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-EHxPf" id="tab-9guPQvd" checked="checked"><label for="tab-9guPQvd">JavaScript</label><input type="radio" name="group-EHxPf" id="tab-hTScoNW"><label for="tab-hTScoNW">CLI</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./build&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./build&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./build</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./build</span></span></code></pre></div></div></div><blockquote><p>bun 很快。下面的数字代表了 esbuild 的 <a href="https://github.com/oven-sh/bun/tree/main/bench/bundle" target="_blank" rel="noreferrer">three.js 基准测试的性能</a>。</p></blockquote><p><img src="`+p+`" alt="bundler"></p><blockquote><p>从头开始打包 three.js 的 10 个副本，使用 sourcemaps 和 minification</p></blockquote><h2 id="为什么要打包" tabindex="-1">为什么要打包？ <a class="header-anchor" href="#为什么要打包" aria-label="Permalink to &quot;为什么要打包？&quot;">​</a></h2><p>bundler 是 JavaScript 生态系统中的关键基础设施。简要概述为什么打包如此重要:</p><ul><li><p><strong>减少 HTTP 请求</strong>： <code>node_modules</code> 中的单个包可能包含数百个文件，大型应用程序可能具有数十个类似依赖项。使用单独的 HTTP 请求加载这些文件中的每一个效率很低下，因此使用打包程序将我们的应用程序源代码转换为较少数量的自包含 “捆绑包”，可以通过单个请求加载。</p></li><li><p><strong>代码转换</strong>：现代应用程序通常使用 <code>TypeScript</code>，<code>JSX</code> 和 <code>CSS</code> 模块等语言或工具构建，所有这些都必须转换为纯 <code>JavaScript</code> 和 <code>CSS</code>，然后才能被浏览器使用。打包器是配置这些转换的自然场所。</p></li><li><p><strong>框架功能</strong>：框架依靠 打包 插件和代码转换来实现常见模式，如文件系统路由、客户端-服务器代码协同定位 (想想 getServerSideProps 或 Remix 加载器) 和服务器组件。</p></li></ul><p>让我们跳到 打包器 API 中。</p><div class="warning custom-block"><p class="custom-block-title">🚨 请注意，Bun 打包器 并非用于替换 tsc 进行类型检测或生成类型声明。 :::</p><h2 id="基本示例" tabindex="-1">基本示例 <a class="header-anchor" href="#基本示例" aria-label="Permalink to &quot;基本示例&quot;">​</a></h2><p>让我们构建我们的第一个包。您有以下两个文件，它们实现了一个简单的客户端渲染的 React 应用程序。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-owZol" id="tab-p6rFc9u" checked="checked"><label for="tab-p6rFc9u">./index.tsx</label><input type="radio" name="group-owZol" id="tab-lVVqISr"><label for="tab-lVVqISr">./Component.tsx</label></div><div class="blocks"><div class="language-tsx vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> ReactDOM </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;react-dom/client&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Component } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./Component&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">root</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ReactDOM.</span><span style="color:#B392F0;">createRoot</span><span style="color:#E1E4E8;">(document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;root&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">root.</span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">(&lt;</span><span style="color:#79B8FF;">Component</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">message</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;Sup!&#39;</span><span style="color:#E1E4E8;"> /&gt;);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> ReactDOM </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;react-dom/client&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Component } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./Component&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">root</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ReactDOM.</span><span style="color:#6F42C1;">createRoot</span><span style="color:#24292E;">(document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;root&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">root.</span><span style="color:#6F42C1;">render</span><span style="color:#24292E;">(&lt;</span><span style="color:#005CC5;">Component</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">message</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;Sup!&#39;</span><span style="color:#24292E;"> /&gt;);</span></span></code></pre></div><div class="language-tsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">*</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">as</span><span style="color:#E1E4E8;"> ReactDOM </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;react-dom/client&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { Component } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./Component&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">root</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> ReactDOM.</span><span style="color:#B392F0;">createRoot</span><span style="color:#E1E4E8;">(document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;root&#39;</span><span style="color:#E1E4E8;">));</span></span>
<span class="line"><span style="color:#E1E4E8;">root.</span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">(&lt;</span><span style="color:#79B8FF;">Component</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">message</span><span style="color:#F97583;">=</span><span style="color:#9ECBFF;">&#39;Sup!&#39;</span><span style="color:#E1E4E8;"> /&gt;);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">*</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">as</span><span style="color:#24292E;"> ReactDOM </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;react-dom/client&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { Component } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./Component&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">root</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> ReactDOM.</span><span style="color:#6F42C1;">createRoot</span><span style="color:#24292E;">(document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;root&#39;</span><span style="color:#24292E;">));</span></span>
<span class="line"><span style="color:#24292E;">root.</span><span style="color:#6F42C1;">render</span><span style="color:#24292E;">(&lt;</span><span style="color:#005CC5;">Component</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">message</span><span style="color:#D73A49;">=</span><span style="color:#032F62;">&#39;Sup!&#39;</span><span style="color:#24292E;"> /&gt;);</span></span></code></pre></div></div></div></div><p>这里，index.tsx 是我们应用程序的 “入口点”。通常，这将是一个执行一些副作用的脚本，例如启动服务器或-在这种情况下-初始化 React root。因为我们使用的是 <code>TypeScript</code> 和 <code>JSX</code>，所以我们需要将代码打包在一起，然后才能将其发送到浏览器。</p><p>要创建我们的包:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-8dIRx" id="tab-h92hi17" checked="checked"><label for="tab-h92hi17">JavaScript</label><input type="radio" name="group-8dIRx" id="tab-TBToOma"><label for="tab-TBToOma">CLI</label></div><div class="blocks"><div class="language-tsx vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">tsx</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span></span></code></pre></div></div></div><p>对于入口点中指定的每个文件，Bun 将生成一个新的包。该包将被写入磁盘的./out 目录 ( 从当前工作目录解析 )。运行构建后，文件系统如下所示：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">├── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">├── Component.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── index.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">├── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">├── Component.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">    └── index.js</span></span></code></pre></div><p>out/index.js 的内容将如下所示:</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#6A737D;">// ~20k lines of code</span></span>
<span class="line"><span style="color:#6A737D;">// including the contents of \`react-dom/client\` and all its dependencies</span></span>
<span class="line"><span style="color:#6A737D;">// this is where the $jsxDEV and $createRoot functions are defined</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Component.tsx</span></span>
<span class="line"><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Component</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">props</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">$jsxDEV</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#9ECBFF;">&#39;p&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		{</span></span>
<span class="line"><span style="color:#E1E4E8;">			children: props.message,</span></span>
<span class="line"><span style="color:#E1E4E8;">		},</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">this</span></span>
<span class="line"><span style="color:#E1E4E8;">	);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// index.tsx</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> rootNode </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> document.</span><span style="color:#B392F0;">getElementById</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;root&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> root </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">$createRoot</span><span style="color:#E1E4E8;">(rootNode);</span></span>
<span class="line"><span style="color:#E1E4E8;">root.</span><span style="color:#B392F0;">render</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">$jsxDEV</span><span style="color:#E1E4E8;">(</span></span>
<span class="line"><span style="color:#E1E4E8;">		Component,</span></span>
<span class="line"><span style="color:#E1E4E8;">		{</span></span>
<span class="line"><span style="color:#E1E4E8;">			message: </span><span style="color:#9ECBFF;">&#39;Sup!&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		},</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">undefined</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#79B8FF;">this</span></span>
<span class="line"><span style="color:#E1E4E8;">	)</span></span>
<span class="line"><span style="color:#E1E4E8;">);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#6A737D;">// ~20k lines of code</span></span>
<span class="line"><span style="color:#6A737D;">// including the contents of \`react-dom/client\` and all its dependencies</span></span>
<span class="line"><span style="color:#6A737D;">// this is where the $jsxDEV and $createRoot functions are defined</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Component.tsx</span></span>
<span class="line"><span style="color:#D73A49;">function</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Component</span><span style="color:#24292E;">(</span><span style="color:#E36209;">props</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">$jsxDEV</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#032F62;">&#39;p&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		{</span></span>
<span class="line"><span style="color:#24292E;">			children: props.message,</span></span>
<span class="line"><span style="color:#24292E;">		},</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">this</span></span>
<span class="line"><span style="color:#24292E;">	);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// index.tsx</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> rootNode </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> document.</span><span style="color:#6F42C1;">getElementById</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;root&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> root </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">$createRoot</span><span style="color:#24292E;">(rootNode);</span></span>
<span class="line"><span style="color:#24292E;">root.</span><span style="color:#6F42C1;">render</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">$jsxDEV</span><span style="color:#24292E;">(</span></span>
<span class="line"><span style="color:#24292E;">		Component,</span></span>
<span class="line"><span style="color:#24292E;">		{</span></span>
<span class="line"><span style="color:#24292E;">			message: </span><span style="color:#032F62;">&#39;Sup!&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		},</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">false</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">undefined</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#005CC5;">this</span></span>
<span class="line"><span style="color:#24292E;">	)</span></span>
<span class="line"><span style="color:#24292E;">);</span></span></code></pre></div><details class="details custom-block"><summary>教程: 在浏览器中运行此文件</summary><p>我们可以在浏览器中加载此文件，以查看我们的应用程序。在 out 目录中创建一个 index.html 文件:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">touch</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">out/index.html</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">touch</span><span style="color:#24292E;"> </span><span style="color:#032F62;">out/index.html</span></span></code></pre></div><p>然后将以下内容粘贴到其中:</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#E1E4E8;">&lt;</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">id</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;root&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">div</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">		&lt;</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">type</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;module&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">src</span><span style="color:#E1E4E8;">=</span><span style="color:#9ECBFF;">&quot;/index.js&quot;</span><span style="color:#E1E4E8;">&gt;&lt;/</span><span style="color:#85E89D;">script</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">	&lt;/</span><span style="color:#85E89D;">body</span><span style="color:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#E1E4E8;">&lt;/</span><span style="color:#85E89D;">html</span><span style="color:#E1E4E8;">&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292E;">&lt;</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;</span><span style="color:#22863A;">div</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">id</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;root&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">div</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">		&lt;</span><span style="color:#22863A;">script</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">type</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;module&quot;</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">src</span><span style="color:#24292E;">=</span><span style="color:#032F62;">&quot;/index.js&quot;</span><span style="color:#24292E;">&gt;&lt;/</span><span style="color:#22863A;">script</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">	&lt;/</span><span style="color:#22863A;">body</span><span style="color:#24292E;">&gt;</span></span>
<span class="line"><span style="color:#24292E;">&lt;/</span><span style="color:#22863A;">html</span><span style="color:#24292E;">&gt;</span></span></code></pre></div><p>然后启动一个服务于 out 目录的静态文件服务器:</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bunx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">serve</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">out</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bunx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">serve</span><span style="color:#24292E;"> </span><span style="color:#032F62;">out</span></span></code></pre></div><p>请访问 http:// localhost:5000 查看打包的应用程序的运行情况。</p></details><h2 id="监视模式" tabindex="-1">监视模式 <a class="header-anchor" href="#监视模式" aria-label="Permalink to &quot;监视模式&quot;">​</a></h2><p>与运行库和测试运行器一样，打包器本身也支持监视模式。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--watch</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--watch</span></span></code></pre></div><h2 id="内容类型" tabindex="-1">内容类型 <a class="header-anchor" href="#内容类型" aria-label="Permalink to &quot;内容类型&quot;">​</a></h2><p>与 Bun 运行时一样，打包器支持开箱即用的文件类型数组。下表分解了打包器的标准 “加载器” 集。有关完整文档，请参阅 <a href="/docs/runtime/loaders.html">Bundler &gt; File types</a>。</p><hr><p><code>.js</code> <code>.cjs</code> <code>.mjs</code> <code>.mts</code> <code>.cts</code> <code>.ts</code> <code>.tsx</code></p><blockquote><p>详细信息： 使用 Bun 的内置转换器来解析文件，并将 TypeScript/JSX 语法转换为 vanilla JavaScript。bundler 执行一组默认转换，包括死代码消除，树摇动和环境变量内联。目前，Bun 不会尝试向下转换语法; 如果您最近使用 ECMAScript 语法，这将反映在捆绑代码中。</p></blockquote><hr><p><code>.json</code></p><blockquote><p>JSON 文件被解析并作为 JavaScript 对象内联到包中。</p></blockquote><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">pkg</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./package.json&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">pkg.name</span><span style="color:#E1E4E8;">; </span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;my-package&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">pkg</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./package.json&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">pkg.name</span><span style="color:#24292E;">; </span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;my-package&quot;</span></span></code></pre></div><hr><p><code>.txt</code></p><blockquote><p>文本文件的内容被读取并作为字符串内联到包中。</p></blockquote><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">import</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">contents</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;./file.txt&quot;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#B392F0;">console.log(contents</span><span style="color:#E1E4E8;">); </span><span style="color:#B392F0;">//</span><span style="color:#E1E4E8;"> =</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;Hello, world!&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">import</span><span style="color:#24292E;"> </span><span style="color:#032F62;">contents</span><span style="color:#24292E;"> </span><span style="color:#032F62;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;./file.txt&quot;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#6F42C1;">console.log(contents</span><span style="color:#24292E;">); </span><span style="color:#6F42C1;">//</span><span style="color:#24292E;"> =</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;Hello, world!&quot;</span></span></code></pre></div><hr><p><code>.node</code> <code>.wasm</code></p><blockquote><p>这些文件受 Bun 运行时支持，但在绑定期间它们被视为<a href="/docs/bundler.html#assets">资源</a>。</p></blockquote><h2 id="资产" tabindex="-1">资产 <a class="header-anchor" href="#资产" aria-label="Permalink to &quot;资产&quot;">​</a></h2><p>如打包器遇到扩展名无法识别的导入，它会将导入的文件视为外部文件。引用的文件将按原样复制到 outdir 中，并将导入解析为该文件的路径。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-5HCfq" id="tab-042VCjh" checked="checked"><label for="tab-042VCjh">Input</label><input type="radio" name="group-5HCfq" id="tab-1T9Adrv"><label for="tab-1T9Adrv">Output</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// bundle entrypoint</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> logo </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./logo.svg&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logo);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// bundle entrypoint</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> logo </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./logo.svg&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logo);</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// bundled output</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> logo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./logo-ab237dfe.svg&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logo);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// bundled output</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> logo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./logo-ab237dfe.svg&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logo);</span></span></code></pre></div></div></div><blockquote><p>文件加载器的确切行为也受 <a href="/docs/bundler.html#naming"><code>naming</code></a> 和 <a href="/docs/bundler.html#publicpath"><code>publicPath</code></a> 的影响。</p></blockquote><p>有关文件加载器的更多完整文档，请参阅 <a href="/docs/bundler/loaders.html#file">bundler &gt; Loaders</a> 页面。</p><h2 id="插件" tabindex="-1">插件 <a class="header-anchor" href="#插件" aria-label="Permalink to &quot;插件&quot;">​</a></h2><p>可以使用 <a href="/docs/bundler/plugins.html">插件</a> 覆盖或扩展此表中描述的行为。有关完整文档，请参阅 <a href="/docs/bundler/plugins.html">Bundler&gt; loader</a> 页面。</p><h2 id="api" tabindex="-1">API <a class="header-anchor" href="#api" aria-label="Permalink to &quot;API&quot;">​</a></h2><h2 id="entrypoints" tabindex="-1"><code>entrypoints</code> <a class="header-anchor" href="#entrypoints" aria-label="Permalink to &quot;\`entrypoints\`&quot;">​</a></h2><p>必填项. 与应用程序的入口点相对应的路径数组。将为每个入口点生成一个包。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-2cArw" id="tab-tCmqmQM" checked="checked"><label for="tab-tCmqmQM">JavaScript</label><input type="radio" name="group-2cArw" id="tab-eLyOy1D"><label for="tab-eLyOy1D">CLI</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.ts&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { success: boolean, outputs: BuildArtifact[], logs: BuildMessage[] }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.ts&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { success: boolean, outputs: BuildArtifact[], logs: BuildMessage[] }</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--entrypoints</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.ts</span></span>
<span class="line"><span style="color:#6A737D;"># the bundle will be printed to stdout</span></span>
<span class="line"><span style="color:#6A737D;"># &lt;bundled code&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--entrypoints</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.ts</span></span>
<span class="line"><span style="color:#6A737D;"># the bundle will be printed to stdout</span></span>
<span class="line"><span style="color:#6A737D;"># &lt;bundled code&gt;</span></span></code></pre></div></div></div><h2 id="outdir" tabindex="-1"><code>outdir</code> <a class="header-anchor" href="#outdir" aria-label="Permalink to &quot;\`outdir\`&quot;">​</a></h2><p>将写入输出文件的目录。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-GyGCi" id="tab-kHHr4Kp" checked="checked"><label for="tab-kHHr4Kp">JavaScript</label><input type="radio" name="group-GyGCi" id="tab-8fSlgIV"><label for="tab-8fSlgIV">CLI</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.ts&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { success: boolean, outputs: BuildArtifact[], logs: BuildMessage[] }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.ts&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"><span style="color:#6A737D;">// =&gt; { success: boolean, outputs: BuildArtifact[], logs: BuildMessage[] }</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--entrypoints</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.ts</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span></span>
<span class="line"><span style="color:#6A737D;"># 打包文件的摘要将打印到stdout</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--entrypoints</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.ts</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span></span>
<span class="line"><span style="color:#6A737D;"># 打包文件的摘要将打印到stdout</span></span></code></pre></div></div></div><p>如果 outdir 没有传递给 JavaScript API，打包的代码将不会写入磁盘。打包文件在 BuildArtifact 对象数组中返回。这些对象是具有额外属性的 Blobs; 有关完整文档，请参见<a href="/docs/bundler.html#outputs">产出</a>。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.ts&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> result.outputs) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 可以作为 blob 使用</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> result.</span><span style="color:#B392F0;">text</span><span style="color:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// Bun将设置Content-Type和Etag标头</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Response</span><span style="color:#E1E4E8;">(result);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">// 可以手动编写，但在这种情况下应该使用 &#39;outdir&#39;。</span></span>
<span class="line"><span style="color:#E1E4E8;">	Bun.</span><span style="color:#B392F0;">write</span><span style="color:#E1E4E8;">(path.</span><span style="color:#B392F0;">join</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;out&#39;</span><span style="color:#E1E4E8;">, result.path), result);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.ts&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> result.outputs) {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 可以作为 blob 使用</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> result.</span><span style="color:#6F42C1;">text</span><span style="color:#24292E;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// Bun将设置Content-Type和Etag标头</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Response</span><span style="color:#24292E;">(result);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">// 可以手动编写，但在这种情况下应该使用 &#39;outdir&#39;。</span></span>
<span class="line"><span style="color:#24292E;">	Bun.</span><span style="color:#6F42C1;">write</span><span style="color:#24292E;">(path.</span><span style="color:#6F42C1;">join</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;out&#39;</span><span style="color:#24292E;">, result.path), result);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>当设置 outdir 时，BuildArtifact 上的 path 属性将是它写入的绝对路径。</p><h2 id="target" tabindex="-1"><code>target</code> <a class="header-anchor" href="#target" aria-label="Permalink to &quot;\`target\`&quot;">​</a></h2><p>打包的预期执行环境。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-kBsve" id="tab-9KaH2Xf" checked="checked"><label for="tab-9KaH2Xf">JavaScript</label><input type="radio" name="group-kBsve" id="tab-MQDvjbB"><label for="tab-MQDvjbB">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.ts&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	target: </span><span style="color:#9ECBFF;">&#39;browser&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// default</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.ts&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	target: </span><span style="color:#032F62;">&#39;browser&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// default</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--entrypoints</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.ts</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--target</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">browser</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--entrypoints</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.ts</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--target</span><span style="color:#24292E;"> </span><span style="color:#032F62;">browser</span></span></code></pre></div></div></div><p>\` 根据目标，Bun 将应用不同的模块解析规则和优化。</p><hr><p><code>browser</code></p><blockquote><p>默认值。用于生成供浏览器执行的包。在解析导入时优先考虑 “浏览器” 导出条件。导入任何内置模块，如 node:events 或 node:path 将起作用，但调用一些函数，如 fs.readFile 将不起作用。</p></blockquote><hr><p><code>bun</code></p><blockquote><p>用于生成旨在由 Bun 运行时运行的 bundle。在许多情况下，没有必要捆绑服务器端代码; 您可以直接执行源代码而无需修改。但是，捆绑服务器代码可以减少启动时间并提高运行性能。</p></blockquote><blockquote><p>使用 target: “bun” 生成的所有捆绑包都带有特殊的 // @ bun pragma 标记，这向 Bun 运行时指示在执行之前无需重新转译文件。</p></blockquote><blockquote><p>如果任何入口点包含 Bun shebang (#!/usr/bin/env bun)，捆绑程序将默认为 target: “bun” 而不是 “browser”。</p></blockquote><hr><p><code>node</code></p><blockquote><p>用于生成打算由 Node.js 运行的包。解析导入时优先考虑“node”导出条件，并输出.mjs。在未来，这将自动多填充 Bun global 和其他内置的 BUN：*模块，尽管这还没有实现。</p></blockquote><hr><h2 id="format" tabindex="-1"><code>format</code> <a class="header-anchor" href="#format" aria-label="Permalink to &quot;\`format\`&quot;">​</a></h2><p>指定生成包中使用的模块格式。</p><p>目前打包器仅支持一种模块格式：&quot;esm&quot;. 支持&quot;cjs&quot;并&quot;iife&quot;已计划。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-aIex1" id="tab-0rgqdD2" checked="checked"><label for="tab-0rgqdD2">JavaScript</label><input type="radio" name="group-aIex1" id="tab-hn9-0Wn"><label for="tab-hn9-0Wn">sh</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	format: </span><span style="color:#9ECBFF;">&#39;esm&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	format: </span><span style="color:#032F62;">&#39;esm&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--format</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">esm</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--format</span><span style="color:#24292E;"> </span><span style="color:#032F62;">esm</span></span></code></pre></div></div></div><h2 id="splitting" tabindex="-1"><code>splitting</code> <a class="header-anchor" href="#splitting" aria-label="Permalink to &quot;\`splitting\`&quot;">​</a></h2><p>是否启用代码拆分。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-jvBrj" id="tab-mYxvsEC" checked="checked"><label for="tab-mYxvsEC">JavaScript</label><input type="radio" name="group-jvBrj" id="tab-8SHdU47"><label for="tab-8SHdU47">sh</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	splitting: </span><span style="color:#79B8FF;">false</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// default</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	splitting: </span><span style="color:#005CC5;">false</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// default</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--splitting</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--splitting</span></span></code></pre></div></div></div><p>当为 true 时，打包器将启用代码拆分。当多个入口都导入相同的文件，模块或文件/模块集时，将共享代码拆分为单独的包通常很有用。这个共享束被称为 chunk （ 通用模块 ）。请考虑以下文件:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-3gTID" id="tab-gDoE1yX" checked="checked"><label for="tab-gDoE1yX">entry-a.ts</label><input type="radio" name="group-3gTID" id="tab-3a0p1kg"><label for="tab-3a0p1kg">entry-b.ts</label><input type="radio" name="group-3gTID" id="tab-hjKoozX"><label for="tab-hjKoozX">shared.ts</label></div><div class="blocks"><div class="language-ts vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { shared } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./shared.ts&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { shared } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./shared.ts&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { shared } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./shared.ts&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { shared } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./shared.ts&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">export</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">shared</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;shared&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">export</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">shared</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;shared&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div></div></div><p>要在启用代码拆分的情况下打包 entry-a.ts 和 entry-b.ts，请执行以下操作:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group--L3F0" id="tab-kgMusle" checked="checked"><label for="tab-kgMusle">JavaScript</label><input type="radio" name="group--L3F0" id="tab-5I8V_HW"><label for="tab-5I8V_HW">entry-b.ts</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./entry-a.ts&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;./entry-b.ts&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	splitting: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./entry-a.ts&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;./entry-b.ts&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	splitting: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./entry-a.ts</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./entry-b.ts</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--splitting</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./entry-a.ts</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./entry-b.ts</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--splitting</span></span></code></pre></div></div></div><p>运行此构建将生成以下文件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">├── entry-a.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">├── entry-b.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">├── shared.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">    ├── entry-a.js</span></span>
<span class="line"><span style="color:#e1e4e8;">    ├── entry-b.js</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── chunk-2fce6291bf86559d.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">├── entry-a.tsx</span></span>
<span class="line"><span style="color:#24292e;">├── entry-b.tsx</span></span>
<span class="line"><span style="color:#24292e;">├── shared.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">    ├── entry-a.js</span></span>
<span class="line"><span style="color:#24292e;">    ├── entry-b.js</span></span>
<span class="line"><span style="color:#24292e;">    └── chunk-2fce6291bf86559d.js</span></span></code></pre></div><p>生成的 chunk-2fce6291bf86559d.js 文件包含共享代码。为避免冲突，默认情况下，文件名会自动包含内容哈希。这可以通过命名进行<a href="/docs/bundler.html#naming">定制</a>。</p><h2 id="plugins" tabindex="-1"><code>plugins</code> <a class="header-anchor" href="#plugins" aria-label="Permalink to &quot;\`plugins\`&quot;">​</a></h2><p>打包期间使用的插件列表。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-e4s3S" id="tab-wOpRpfw" checked="checked"><label for="tab-wOpRpfw">JavaScript</label><input type="radio" name="group-e4s3S" id="tab-4huPeTQ"><label for="tab-4huPeTQ">entry-b.ts</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	plugins: [</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">/* ... */</span></span>
<span class="line"><span style="color:#E1E4E8;">	],</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	plugins: [</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">/* ... */</span></span>
<span class="line"><span style="color:#24292E;">	],</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">n/a</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">n/a</span></span></code></pre></div></div></div><p>Bun 为 Bun 的运行时和 打包器 实现了一个<a href="/docs/bundler/plugins.html">通用的插件系统</a>。有关完整文档，请参阅插件文档。</p><h2 id="sourcemap" tabindex="-1"><code>sourcemap</code> <a class="header-anchor" href="#sourcemap" aria-label="Permalink to &quot;\`sourcemap\`&quot;">​</a></h2><p>指定要生成的 sourcemap 的类型。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-3W_bz" id="tab-mFJ5Ga7" checked="checked"><label for="tab-mFJ5Ga7">JavaScript</label><input type="radio" name="group-3W_bz" id="tab-hTFqRMq"><label for="tab-hTFqRMq">entry-b.ts</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	sourcemap: </span><span style="color:#9ECBFF;">&#39;external&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// default &quot;none&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	sourcemap: </span><span style="color:#032F62;">&#39;external&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// default &quot;none&quot;</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--sourcemap=external</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--sourcemap=external</span></span></code></pre></div></div></div><hr><p><code>none</code></p><blockquote><p>默认值。不生成 sourcemap。</p></blockquote><hr><p><code>inline</code></p><blockquote><p>将生成一个源地图，并将其作为 Base64 有效负载附加到所生成的包的末尾。</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// &lt;bundled code here&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//# sourceMappingURL=data:application/json;base64,&lt;encoded sourcemap here&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// &lt;bundled code here&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//# sourceMappingURL=data:application/json;base64,&lt;encoded sourcemap here&gt;</span></span></code></pre></div><hr><p><code>external</code></p><blockquote><p>在每个 *.js bundle 旁边创建一个单独的 *.js.map 文件。</p></blockquote><blockquote><p>生成的包，包含可用于将包与其对应的 sourcemap 关联的调试 id。此 <code>debugId</code> 作为注释添加到文件的底部。</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// &lt;generated bundle code&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//# debugId=&lt;DEBUG ID&gt;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// &lt;generated bundle code&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">//# debugId=&lt;DEBUG ID&gt;</span></span></code></pre></div><p>关联的 *.js.map 源地图将是一个 JSON 文件，其中包含等价的 <code>debugId</code> 属性。</p><h2 id="minify" tabindex="-1"><code>minify</code> <a class="header-anchor" href="#minify" aria-label="Permalink to &quot;\`minify\`&quot;">​</a></h2><p>是否启用压缩。默认为 false。</p><blockquote><p>当以 bun 为目标时，标识符将在默认情况下被压缩。</p></blockquote><p>要启用所有缩小选项，请执行以下操作：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-m6516" id="tab-Myj-Up2" checked="checked"><label for="tab-Myj-Up2">JavaScript</label><input type="radio" name="group-m6516" id="tab-_nvCGGo"><label for="tab-_nvCGGo">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	minify: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// default false</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	minify: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// default false</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--minify</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--minify</span></span></code></pre></div></div></div><p>要精确地启用某些压缩，请执行以下操作：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-sw39V" id="tab-jz5vR21" checked="checked"><label for="tab-jz5vR21">JavaScript</label><input type="radio" name="group-sw39V" id="tab-Q88DEJo"><label for="tab-Q88DEJo">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	minify: {</span></span>
<span class="line"><span style="color:#E1E4E8;">		whitespace: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		identifiers: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		syntax: </span><span style="color:#79B8FF;">true</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	},</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	minify: {</span></span>
<span class="line"><span style="color:#24292E;">		whitespace: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		identifiers: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		syntax: </span><span style="color:#005CC5;">true</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	},</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--minify-whitespace</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--minify-identifiers</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--minify-syntax</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--minify-whitespace</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--minify-identifiers</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--minify-syntax</span></span></code></pre></div></div></div><h2 id="external" tabindex="-1"><code>external</code> <a class="header-anchor" href="#external" aria-label="Permalink to &quot;\`external\`&quot;">​</a></h2><p>要考虑外部的导入路径列表。默认为[]。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-PfyEU" id="tab-ObvO1ef" checked="checked"><label for="tab-ObvO1ef">JavaScript</label><input type="radio" name="group-PfyEU" id="tab-zcu0-WP"><label for="tab-zcu0-WP">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	external: [</span><span style="color:#9ECBFF;">&#39;lodash&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;react&#39;</span><span style="color:#E1E4E8;">], </span><span style="color:#6A737D;">// default: []</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	external: [</span><span style="color:#032F62;">&#39;lodash&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;react&#39;</span><span style="color:#24292E;">], </span><span style="color:#6A737D;">// default: []</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--external</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">lodash</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--external</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">react</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--external</span><span style="color:#24292E;"> </span><span style="color:#032F62;">lodash</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--external</span><span style="color:#24292E;"> </span><span style="color:#032F62;">react</span></span></code></pre></div></div></div><p>外部导入是不会包含在最终包中的导入。相反，import 语句将保持不变，以便在运行时解析。</p><p>例如，考虑以下入口点文件：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> _ </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;lodash&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { z } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;zod&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">value</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> z.</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Hello world!&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(_.</span><span style="color:#B392F0;">upperCase</span><span style="color:#E1E4E8;">(value));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> _ </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;lodash&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { z } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;zod&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">value</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> z.</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Hello world!&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(_.</span><span style="color:#6F42C1;">upperCase</span><span style="color:#24292E;">(value));</span></span></code></pre></div><p>通常，捆绑 index.tsx 将生成包含 “zod” 包的整个源代码的捆绑包。如果相反，我们希望将 import 语句保留原样，我们可以将其标记为 external:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-RI-9H" id="tab-1RDCg5p" checked="checked"><label for="tab-1RDCg5p">JavaScript</label><input type="radio" name="group-RI-9H" id="tab-Mf3Xr46"><label for="tab-Mf3Xr46">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	external: [</span><span style="color:#9ECBFF;">&#39;zod&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	external: [</span><span style="color:#032F62;">&#39;zod&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--external</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">zod</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--external</span><span style="color:#24292E;"> </span><span style="color:#032F62;">zod</span></span></code></pre></div></div></div><p>生成的包如下所示：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { z } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;zod&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#6A737D;">// the contents of the &quot;lodash&quot; package</span></span>
<span class="line"><span style="color:#6A737D;">// including the \`_.upperCase\` function</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> value </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> z.</span><span style="color:#B392F0;">string</span><span style="color:#E1E4E8;">().</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Hello world!&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(_.</span><span style="color:#B392F0;">upperCase</span><span style="color:#E1E4E8;">(value));</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { z } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;zod&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// ...</span></span>
<span class="line"><span style="color:#6A737D;">// the contents of the &quot;lodash&quot; package</span></span>
<span class="line"><span style="color:#6A737D;">// including the \`_.upperCase\` function</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> value </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> z.</span><span style="color:#6F42C1;">string</span><span style="color:#24292E;">().</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Hello world!&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(_.</span><span style="color:#6F42C1;">upperCase</span><span style="color:#24292E;">(value));</span></span></code></pre></div><p>要将所有导入标记为外部，请使用通配符 *:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-La35j" id="tab-1wiooCI" checked="checked"><label for="tab-1wiooCI">JavaScript</label><input type="radio" name="group-La35j" id="tab-lrXDdoM"><label for="tab-lrXDdoM">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	external: [</span><span style="color:#9ECBFF;">&#39;*&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	external: [</span><span style="color:#032F62;">&#39;*&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--external</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;*&#39;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--external</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;*&#39;</span></span></code></pre></div></div></div><h2 id="naming" tabindex="-1"><code>naming</code> <a class="header-anchor" href="#naming" aria-label="Permalink to &quot;\`naming\`&quot;">​</a></h2><p>自定义生成的文件名。默认值为./[dir]/[name].[ext]。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-gYXZp" id="tab-mGDTHb9" checked="checked"><label for="tab-mGDTHb9">JavaScript</label><input type="radio" name="group-gYXZp" id="tab-zBMul4R"><label for="tab-zBMul4R">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	naming: </span><span style="color:#9ECBFF;">&#39;[dir]/[name].[ext]&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// default</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	naming: </span><span style="color:#032F62;">&#39;[dir]/[name].[ext]&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// default</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--entry-naming</span><span style="color:#E1E4E8;"> [dir]/[name].[ext]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--entry-naming</span><span style="color:#24292E;"> [dir]/[name].[ext]</span></span></code></pre></div></div></div><p>默认情况下，生成的包的名称基于关联入口点的名称。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">├── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── index.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">├── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">    └── index.js</span></span></code></pre></div><p>使用多个入口点，生成的文件层次结构将反映入口点的目录结构。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">├── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── nested</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">    ├── index.js</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── nested</span></span>
<span class="line"><span style="color:#e1e4e8;">        └── index.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">├── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── nested</span></span>
<span class="line"><span style="color:#24292e;">    └── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">    ├── index.js</span></span>
<span class="line"><span style="color:#24292e;">    └── nested</span></span>
<span class="line"><span style="color:#24292e;">        └── index.js</span></span></code></pre></div><p>生成的文件的名称和位置可以使用命名字段进行定制。此字段接受模板字符串，该字符串用于生成与入口点对应的所有包的文件名。其中，以下令牌将替换为其对应的值：</p><ul><li>[name] - 入口点文件的名称，不带扩展名。</li><li>[ext] - 生成的包的扩展名。</li><li>[hash] - 包内容的哈希。</li><li>[dir] - 从生成根目录到文件父目录的相对路径。</li></ul><p>例如:</p><table><thead><tr><th style="text-align:center;">Token</th><th style="text-align:center;"><code>[name]</code></th><th style="text-align:center;">[ext]</th><th style="text-align:center;">[hash]</th><th style="text-align:center;">[dir]</th></tr></thead><tbody><tr><td style="text-align:center;"><code>./index.tsx</code></td><td style="text-align:center;"><code>index</code></td><td style="text-align:center;"><code>js</code></td><td style="text-align:center;"><code>a1b2c3d4</code></td><td style="text-align:center;">&quot;&quot; (空字符串)</td></tr><tr><td style="text-align:center;"><code>./nested/entry.ts</code></td><td style="text-align:center;"><code>entry</code></td><td style="text-align:center;"><code>js</code></td><td style="text-align:center;"><code>c3d4e5f6</code></td><td style="text-align:center;"><code>nested</code></td></tr></tbody></table><p>我们可以组合这些标记来创建一个模板字符串。例如，要在生成的包的名称中包含哈希值:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-0YmiB" id="tab-JC3Fyns" checked="checked"><label for="tab-JC3Fyns">JavaScript</label><input type="radio" name="group-0YmiB" id="tab-3PRR8l7"><label for="tab-3PRR8l7">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	naming: </span><span style="color:#9ECBFF;">&#39;files/[dir]/[name]-[hash].[ext]&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	naming: </span><span style="color:#032F62;">&#39;files/[dir]/[name]-[hash].[ext]&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--entry-naming</span><span style="color:#E1E4E8;"> [name]-[hash].[ext]</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--entry-naming</span><span style="color:#24292E;"> [name]-[hash].[ext]</span></span></code></pre></div></div></div><p>此构建将产生以下文件结构：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">├── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── files</span></span>
<span class="line"><span style="color:#e1e4e8;">        └── index-a1b2c3d4.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">├── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">    └── files</span></span>
<span class="line"><span style="color:#24292e;">        └── index-a1b2c3d4.js</span></span></code></pre></div><p>当为命名字段提供字符串时，它仅用于与入口点对应的<a href="/docs/bundler.html#splitting">块</a>。区块和复制资产的名称不受影响。使用 JavaScript API，可以为每种类型的生成文件指定单独的模板字符串。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-O1z6i" id="tab-m7arsOX" checked="checked"><label for="tab-m7arsOX">JavaScript</label><input type="radio" name="group-O1z6i" id="tab-lZEW3S5"><label for="tab-lZEW3S5">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	naming: {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// default values</span></span>
<span class="line"><span style="color:#E1E4E8;">		entry: </span><span style="color:#9ECBFF;">&#39;[dir]/[name].[ext]&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		chunk: </span><span style="color:#9ECBFF;">&#39;[name]-[hash].[ext]&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		asset: </span><span style="color:#9ECBFF;">&#39;[name]-[hash].[ext]&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	},</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	naming: {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// default values</span></span>
<span class="line"><span style="color:#24292E;">		entry: </span><span style="color:#032F62;">&#39;[dir]/[name].[ext]&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		chunk: </span><span style="color:#032F62;">&#39;[name]-[hash].[ext]&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		asset: </span><span style="color:#032F62;">&#39;[name]-[hash].[ext]&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	},</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--entry-naming</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;[dir]/[name].[ext]&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--chunk-naming</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;[name]-[hash].[ext]&quot;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--asset-naming</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;[name]-[hash].[ext]&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--entry-naming</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;[dir]/[name].[ext]&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--chunk-naming</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;[name]-[hash].[ext]&quot;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--asset-naming</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;[name]-[hash].[ext]&quot;</span></span></code></pre></div></div></div><h2 id="root" tabindex="-1"><code>root</code> <a class="header-anchor" href="#root" aria-label="Permalink to &quot;\`root\`&quot;">​</a></h2><p>项目的根目录。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-I3T4D" id="tab-Fh3_XEx" checked="checked"><label for="tab-Fh3_XEx">JavaScript</label><input type="radio" name="group-I3T4D" id="tab-nHTFLiE"><label for="tab-nHTFLiE">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./pages/a.tsx&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;./pages/b.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	root: </span><span style="color:#9ECBFF;">&#39;.&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./pages/a.tsx&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;./pages/b.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	root: </span><span style="color:#032F62;">&#39;.&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">n/a</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">n/a</span></span></code></pre></div></div></div><p>如果未指定，它将被计算为所有入口点文件的第一个公共祖先。请考虑以下文件结构：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">└── pages</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── settings.tsx</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">└── pages</span></span>
<span class="line"><span style="color:#24292e;">  └── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">  └── settings.tsx</span></span></code></pre></div><p>我们可以在 pages 目录中构建两个入口点:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-kZYEc" id="tab-4siQo0E" checked="checked"><label for="tab-4siQo0E">JavaScript</label><input type="radio" name="group-kZYEc" id="tab-68k6wPG"><label for="tab-68k6wPG">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./pages/index.tsx&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;./pages/settings.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./pages/index.tsx&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;./pages/settings.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./pages/index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./pages/settings.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./pages/index.tsx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./pages/settings.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span></span></code></pre></div></div></div><p>这将产生如下所示的文件结构：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">└── pages</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── settings.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── index.js</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── settings.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">└── pages</span></span>
<span class="line"><span style="color:#24292e;">  └── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">  └── settings.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">  └── index.js</span></span>
<span class="line"><span style="color:#24292e;">  └── settings.js</span></span></code></pre></div><p>由于 Pages 目录是入口点文件的第一个公共祖先，因此它被视为项目根目录。这意味着生成的包位于 out 目录的顶层；没有 out/ages 目录。</p><p>可以通过指定 root 选项来覆盖此行为:</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-OZXHk" id="tab-NDO5xuw" checked="checked"><label for="tab-NDO5xuw">JavaScript</label><input type="radio" name="group-OZXHk" id="tab-3dlbA26"><label for="tab-3dlbA26">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./pages/index.tsx&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;./pages/settings.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	root: </span><span style="color:#9ECBFF;">&#39;.&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./pages/index.tsx&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;./pages/settings.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	root: </span><span style="color:#032F62;">&#39;.&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./pages/index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./pages/settings.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--root</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./pages/index.tsx</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./pages/settings.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--root</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.</span></span></code></pre></div></div></div><p>通过指定 . 作为 root，生成的文件结构将如下所示:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">.</span></span>
<span class="line"><span style="color:#e1e4e8;">└── pages</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── index.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── settings.tsx</span></span>
<span class="line"><span style="color:#e1e4e8;">└── out</span></span>
<span class="line"><span style="color:#e1e4e8;">  └── pages</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── index.js</span></span>
<span class="line"><span style="color:#e1e4e8;">    └── settings.js</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">.</span></span>
<span class="line"><span style="color:#24292e;">└── pages</span></span>
<span class="line"><span style="color:#24292e;">  └── index.tsx</span></span>
<span class="line"><span style="color:#24292e;">  └── settings.tsx</span></span>
<span class="line"><span style="color:#24292e;">└── out</span></span>
<span class="line"><span style="color:#24292e;">  └── pages</span></span>
<span class="line"><span style="color:#24292e;">    └── index.js</span></span>
<span class="line"><span style="color:#24292e;">    └── settings.js</span></span></code></pre></div><h2 id="publicpath" tabindex="-1"><code>publicPath</code> <a class="header-anchor" href="#publicpath" aria-label="Permalink to &quot;\`publicPath\`&quot;">​</a></h2><p>要附加到打包代码中任何导入路径的前缀。</p><p>在许多情况下，生成的包将不包含 import 语句。毕竟，打包的目标是将所有代码合并到一个文件中。然而，在许多情况下，生成的捆绑包将包含 import 语句。</p><ul><li><p>资产入口 — 在导入无法识别的文件类型(如*.svg)时，打包器遵循<a href="/docs/bundler/loaders.html#file">文件加载器</a>，它会将文件原样复制到 outdir 中。将导入转换为变量</p></li><li><p>外部模块 - 可以将文件和模块标记为<a href="/docs/bundler.html#external">外部</a>，在这种情况下，它们不会包含在捆绑包中。相反，导入语句将保留在最终包中。</p></li><li><p>程序分块 - 当启用拆分时，打包器可以生成表示在多个入口点之间共享的代码的单独的 “块” 文件。</p></li></ul><p>在上述任何一种情况下，最终包都可能包含指向其他文件的路径。默认情况下，这些导入是相对的。以下是一个简单的资产导入示例：</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-fL62a" id="tab-wGVTmn_" checked="checked"><label for="tab-wGVTmn_">Input</label><input type="radio" name="group-fL62a" id="tab-oupI7HY"><label for="tab-oupI7HY">Output</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> logo </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./logo.svg&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logo);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> logo </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./logo.svg&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logo);</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// logo.svg is copied into &lt;outdir&gt;</span></span>
<span class="line"><span style="color:#6A737D;">// and hash is added to the filename to prevent collisions</span></span>
<span class="line"><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> logo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./logo-a7305bdef.svg&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(logo);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// logo.svg is copied into &lt;outdir&gt;</span></span>
<span class="line"><span style="color:#6A737D;">// and hash is added to the filename to prevent collisions</span></span>
<span class="line"><span style="color:#D73A49;">var</span><span style="color:#24292E;"> logo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./logo-a7305bdef.svg&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(logo);</span></span></code></pre></div></div></div><p>设置 publicPath 将为所有文件路径添加指定值的前缀。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-f5kmB" id="tab-g4uWc3H" checked="checked"><label for="tab-g4uWc3H">JavaScript</label><input type="radio" name="group-f5kmB" id="tab-hOdNQD7"><label for="tab-hOdNQD7">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	publicPath: </span><span style="color:#9ECBFF;">&#39;https://cdn.example.com/&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#6A737D;">// default is undefined</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	publicPath: </span><span style="color:#032F62;">&#39;https://cdn.example.com/&#39;</span><span style="color:#24292E;">, </span><span style="color:#6A737D;">// default is undefined</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#e1e4e8;">n/a;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#24292e;">n/a;</span></span></code></pre></div></div></div><p>输出文件现在应该如下所示。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">-</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> logo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;./logo-a7305bdef.svg&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#F97583;">+</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">var</span><span style="color:#E1E4E8;"> logo </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;https://cdn.example.com/logo-a7305bdef.svg&#39;</span><span style="color:#E1E4E8;">;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">-</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> logo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;./logo-a7305bdef.svg&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#D73A49;">+</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">var</span><span style="color:#24292E;"> logo </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;https://cdn.example.com/logo-a7305bdef.svg&#39;</span><span style="color:#24292E;">;</span></span></code></pre></div><h2 id="define" tabindex="-1"><code>define</code> <a class="header-anchor" href="#define" aria-label="Permalink to &quot;\`define\`&quot;">​</a></h2><p>要在构建时替换的全局标识符的映射。此对象的键是标识符名称，值是将内联的 JSON 字符串。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-pE0xO" id="tab-R_ozPK0" checked="checked"><label for="tab-R_ozPK0">JavaScript</label><input type="radio" name="group-pE0xO" id="tab-XojGcRJ"><label for="tab-XojGcRJ">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	define: {</span></span>
<span class="line"><span style="color:#E1E4E8;">		STRING: </span><span style="color:#79B8FF;">JSON</span><span style="color:#E1E4E8;">.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;value&#39;</span><span style="color:#E1E4E8;">),</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#9ECBFF;">&#39;nested.boolean&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;true&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	},</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	define: {</span></span>
<span class="line"><span style="color:#24292E;">		STRING: </span><span style="color:#005CC5;">JSON</span><span style="color:#24292E;">.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;value&#39;</span><span style="color:#24292E;">),</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#032F62;">&#39;nested.boolean&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;true&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	},</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--define</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;STRING=&quot;value&quot;&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--define</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&quot;nested.boolean=true&quot;</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--define</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;STRING=&quot;value&quot;&#39;</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--define</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&quot;nested.boolean=true&quot;</span></span></code></pre></div></div></div><h2 id="loader" tabindex="-1"><code>loader</code> <a class="header-anchor" href="#loader" aria-label="Permalink to &quot;\`loader\`&quot;">​</a></h2><p>文件扩展名到 <a href="/docs/bundler/loaders.html#built-in-loaders">内置加载程序名称</a> 的映射。这可用于快速自定义某些文件文件的加载方式。</p><div class="vp-code-group vp-adaptive-theme"><div class="tabs"><input type="radio" name="group-wNKP0" id="tab-XJ0CDHa" checked="checked"><label for="tab-XJ0CDHa">JavaScript</label><input type="radio" name="group-wNKP0" id="tab-I_Vfeat"><label for="tab-I_Vfeat">CLI</label></div><div class="blocks"><div class="language-js vp-adaptive-theme active"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	loader: {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#9ECBFF;">&#39;.png&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;dataurl&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#9ECBFF;">&#39;.txt&#39;</span><span style="color:#E1E4E8;">: </span><span style="color:#9ECBFF;">&#39;file&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">	},</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	loader: {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#032F62;">&#39;.png&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;dataurl&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#032F62;">&#39;.txt&#39;</span><span style="color:#24292E;">: </span><span style="color:#032F62;">&#39;file&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">	},</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./index.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outdir</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./out</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--loader</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.png:dataurl</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--loader</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">.txt:file</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./index.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outdir</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./out</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--loader</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.png:dataurl</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--loader</span><span style="color:#24292E;"> </span><span style="color:#032F62;">.txt:file</span></span></code></pre></div></div></div><h2 id="outputs" tabindex="-1">Outputs <a class="header-anchor" href="#outputs" aria-label="Permalink to &quot;Outputs&quot;">​</a></h2><p>Bun.build 函数返回一个 <code>Promise&lt;BuildOutput&gt;</code>，定义为:</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildOutput</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">outputs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;">[];</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">success</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">logs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#79B8FF;">object</span><span style="color:#E1E4E8;">&gt;; </span><span style="color:#6A737D;">// see docs for details</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Blob</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">kind</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;entry-point&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;chunk&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;asset&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;sourcemap&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">loader</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Loader</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">hash</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">sourcemap</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildOutput</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">outputs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;">[];</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">success</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">logs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">&lt;</span><span style="color:#005CC5;">object</span><span style="color:#24292E;">&gt;; </span><span style="color:#6A737D;">// see docs for details</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Blob</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">kind</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;entry-point&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;chunk&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;asset&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;sourcemap&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">loader</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Loader</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">hash</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">sourcemap</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>输出数组包含生成生成的所有文件。每个构件都实现了 Blob 接口。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">/* */</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">output</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> build.outputs) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> output.</span><span style="color:#B392F0;">arrayBuffer</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// =&gt; ArrayBuffer</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> output.</span><span style="color:#B392F0;">text</span><span style="color:#E1E4E8;">(); </span><span style="color:#6A737D;">// string</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">build</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">/* */</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">output</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> build.outputs) {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> output.</span><span style="color:#6F42C1;">arrayBuffer</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// =&gt; ArrayBuffer</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> output.</span><span style="color:#6F42C1;">text</span><span style="color:#24292E;">(); </span><span style="color:#6A737D;">// string</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>每个对象还包含以下属性：</p><hr><p><code>kind</code></p><blockquote><p>这个文件是什么样的构建输出。构建生成包的入口点，代码拆分的 “块”，源映射和复制的资产 (如图像)。</p></blockquote><hr><p><code>path</code></p><blockquote><p>磁盘上文件的绝对路径</p></blockquote><hr><p><code>loader</code></p><blockquote><p>加载器被用来解释文件。请参阅 <a href="/docs/bundler/loaders.html">bundler &gt; Loaders</a> 以了解 Bun 如何将文件扩展名映射到适当的内置加载程序。</p></blockquote><hr><p><code>hash</code></p><blockquote><p>文件内容的哈希。始终为资产定义。</p></blockquote><hr><p><code>sourcemap</code></p><blockquote><p>与此文件对应的 <code>sourcemap</code> 文件 (如果已生成)。仅针对入口点和块定义。</p></blockquote><hr><p>与 <code>BunFile</code> 类似，<code>BuildArtifact</code> 对象可以直接传递到 <code>new Response()</code> 中。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">/* */</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">artifact</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> build.outputs[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Content-Type header is automatically set</span></span>
<span class="line"><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Response</span><span style="color:#E1E4E8;">(artifact);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">build</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">/* */</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">artifact</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> build.outputs[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;">// Content-Type header is automatically set</span></span>
<span class="line"><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Response</span><span style="color:#24292E;">(artifact);</span></span></code></pre></div><p>Bun 运行时实现了 BuildArtifact 对象的特殊漂亮打印，使调试更容易。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#6A737D;">// build.ts</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#6A737D;">/* */</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">artifact</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> build.outputs[</span><span style="color:#79B8FF;">0</span><span style="color:#E1E4E8;">];</span></span>
<span class="line"><span style="color:#E1E4E8;">console.</span><span style="color:#B392F0;">log</span><span style="color:#E1E4E8;">(artifact);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6A737D;">// build.ts</span></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">build</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6A737D;">/* */</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">artifact</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> build.outputs[</span><span style="color:#005CC5;">0</span><span style="color:#24292E;">];</span></span>
<span class="line"><span style="color:#24292E;">console.</span><span style="color:#6F42C1;">log</span><span style="color:#24292E;">(artifact);</span></span></code></pre></div><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">run</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># BuildArtifact (entry-point) {</span></span>
<span class="line"><span style="color:#6A737D;">#  path: &quot;./index.js&quot;,</span></span>
<span class="line"><span style="color:#6A737D;">#  loader: &quot;tsx&quot;,</span></span>
<span class="line"><span style="color:#6A737D;">#  kind: &quot;entry-point&quot;,</span></span>
<span class="line"><span style="color:#6A737D;">#  hash: &quot;824a039620219640&quot;,</span></span>
<span class="line"><span style="color:#6A737D;">#  Blob (114 bytes) {</span></span>
<span class="line"><span style="color:#6A737D;">#    type: &quot;text/javascript;charset=utf-8&quot;</span></span>
<span class="line"><span style="color:#6A737D;">#  },</span></span>
<span class="line"><span style="color:#6A737D;">#  sourcemap: null</span></span>
<span class="line"><span style="color:#6A737D;"># }</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">run</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;"># BuildArtifact (entry-point) {</span></span>
<span class="line"><span style="color:#6A737D;">#  path: &quot;./index.js&quot;,</span></span>
<span class="line"><span style="color:#6A737D;">#  loader: &quot;tsx&quot;,</span></span>
<span class="line"><span style="color:#6A737D;">#  kind: &quot;entry-point&quot;,</span></span>
<span class="line"><span style="color:#6A737D;">#  hash: &quot;824a039620219640&quot;,</span></span>
<span class="line"><span style="color:#6A737D;">#  Blob (114 bytes) {</span></span>
<span class="line"><span style="color:#6A737D;">#    type: &quot;text/javascript;charset=utf-8&quot;</span></span>
<span class="line"><span style="color:#6A737D;">#  },</span></span>
<span class="line"><span style="color:#6A737D;">#  sourcemap: null</span></span>
<span class="line"><span style="color:#6A737D;"># }</span></span></code></pre></div><p>:::</p><h2 id="可执行文件" tabindex="-1">可执行文件 <a class="header-anchor" href="#可执行文件" aria-label="Permalink to &quot;可执行文件&quot;">​</a></h2><p>Bun 支持将 JavaScript/TypeScript 入口点 “编译” 为独立的可执行文件。此可执行文件包含 Bun 二进制文件的副本。</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">bun</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">build</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./cli.tsx</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--outfile</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">mycli</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">--compile</span></span>
<span class="line"><span style="color:#B392F0;">$</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">./mycli</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">bun</span><span style="color:#24292E;"> </span><span style="color:#032F62;">build</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./cli.tsx</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--outfile</span><span style="color:#24292E;"> </span><span style="color:#032F62;">mycli</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">--compile</span></span>
<span class="line"><span style="color:#6F42C1;">$</span><span style="color:#24292E;"> </span><span style="color:#032F62;">./mycli</span></span></code></pre></div><p>有关完整文档，请参阅 <a href="/docs/bundler/executables.html">Bundler&gt; Executables</a>。</p><h2 id="日志和错误" tabindex="-1">日志和错误 <a class="header-anchor" href="#日志和错误" aria-label="Permalink to &quot;日志和错误&quot;">​</a></h2><p>Bun.build 仅在提供无效选项时抛出读取 success 属性以确定构建是否成功; logs 属性将包含其他详细信息。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">result</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">await</span><span style="color:#E1E4E8;"> Bun.</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">({</span></span>
<span class="line"><span style="color:#E1E4E8;">	entrypoints: [</span><span style="color:#9ECBFF;">&#39;./index.tsx&#39;</span><span style="color:#E1E4E8;">],</span></span>
<span class="line"><span style="color:#E1E4E8;">	outdir: </span><span style="color:#9ECBFF;">&#39;./out&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">result.success) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	console.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;Build failed&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">for</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">message</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">of</span><span style="color:#E1E4E8;"> result.logs) {</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#6A737D;">// Bun will pretty print the message object</span></span>
<span class="line"><span style="color:#E1E4E8;">		console.</span><span style="color:#B392F0;">error</span><span style="color:#E1E4E8;">(message);</span></span>
<span class="line"><span style="color:#E1E4E8;">	}</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">result</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">await</span><span style="color:#24292E;"> Bun.</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">({</span></span>
<span class="line"><span style="color:#24292E;">	entrypoints: [</span><span style="color:#032F62;">&#39;./index.tsx&#39;</span><span style="color:#24292E;">],</span></span>
<span class="line"><span style="color:#24292E;">	outdir: </span><span style="color:#032F62;">&#39;./out&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">result.success) {</span></span>
<span class="line"><span style="color:#24292E;">	console.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;Build failed&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">for</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">message</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">of</span><span style="color:#24292E;"> result.logs) {</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#6A737D;">// Bun will pretty print the message object</span></span>
<span class="line"><span style="color:#24292E;">		console.</span><span style="color:#6F42C1;">error</span><span style="color:#24292E;">(message);</span></span>
<span class="line"><span style="color:#24292E;">	}</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>每条消息都是一个 BuildMessage 或 ResolveMessage 对象，可用于跟踪生成过程中发生的问题。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildMessage</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">position</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Position</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">message</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">level</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;error&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;warning&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;info&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;debug&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;verbose&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ResolveMessage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildMessage</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">code</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">referrer</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">specifier</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">importKind</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ImportKind</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildMessage</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">position</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Position</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">message</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">level</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;error&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;warning&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;info&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;debug&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;verbose&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ResolveMessage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildMessage</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">code</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">referrer</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">specifier</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">importKind</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ImportKind</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><p>如果希望从失败的生成引发错误，请考虑将日志传递给 AggregateError。如果没有被捕获，Bun 会漂亮地打印出包含的消息。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">if</span><span style="color:#E1E4E8;"> (</span><span style="color:#F97583;">!</span><span style="color:#E1E4E8;">result.success) {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">throw</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">AggregateError</span><span style="color:#E1E4E8;">(result.logs, </span><span style="color:#9ECBFF;">&#39;Build failed&#39;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">if</span><span style="color:#24292E;"> (</span><span style="color:#D73A49;">!</span><span style="color:#24292E;">result.success) {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">throw</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">new</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">AggregateError</span><span style="color:#24292E;">(result.logs, </span><span style="color:#032F62;">&#39;Build failed&#39;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div><h2 id="参考" tabindex="-1">参考 <a class="header-anchor" href="#参考" aria-label="Permalink to &quot;参考&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Bun</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">build</span><span style="color:#E1E4E8;">(</span><span style="color:#FFAB70;">options</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildOptions</span><span style="color:#E1E4E8;">)</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Promise</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">BuildOutput</span><span style="color:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildOptions</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">entrypoints</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]; </span><span style="color:#6A737D;">// required</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">outdir</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// default: no write (in-memory only)</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">format</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;esm&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// later: &quot;cjs&quot; | &quot;iife&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">target</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;browser&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;bun&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;node&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// &quot;browser&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">splitting</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">plugins</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BunPlugin</span><span style="color:#E1E4E8;">[]; </span><span style="color:#6A737D;">// [] // See https://bun.sh/docs/bundler/plugins</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">loader</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> { [</span><span style="color:#B392F0;">k</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">in</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">]</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Loader</span><span style="color:#E1E4E8;"> }; </span><span style="color:#6A737D;">// See https://bun.sh/docs/bundler/loaders</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">manifest</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">external</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">[]; </span><span style="color:#6A737D;">// []</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">sourcemap</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;none&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;inline&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;external&#39;</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// &quot;none&quot;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">root</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// computed from entrypoints</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">naming</span><span style="color:#F97583;">?:</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#FFAB70;">entry</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// &#39;[dir]/[name].[ext]&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#FFAB70;">chunk</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// &#39;[name]-[hash].[ext]&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">				</span><span style="color:#FFAB70;">asset</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// &#39;[name]-[hash].[ext]&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		  };</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">publicPath</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">; </span><span style="color:#6A737D;">// e.g. http://mydomain.com/</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">minify</span><span style="color:#F97583;">?:</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;"> </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">				identifiers</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> boolean;</span></span>
<span class="line"><span style="color:#E1E4E8;">				whitespace</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> boolean;</span></span>
<span class="line"><span style="color:#E1E4E8;">				syntax</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> boolean;</span></span>
<span class="line"><span style="color:#E1E4E8;">		  };</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildOutput</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">outputs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;">[];</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">success</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">logs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">BuildMessage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ResolveMessage</span><span style="color:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">extends</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Blob</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">path</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">loader</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Loader</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">hash</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">kind</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;entry-point&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;chunk&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;asset&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;sourcemap&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">sourcemap</span><span style="color:#F97583;">?:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">type</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Loader</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;js&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;jsx&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ts&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;tsx&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;json&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;toml&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;file&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;napi&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;wasm&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;text&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">interface</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildOutput</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">outputs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">BuildArtifact</span><span style="color:#E1E4E8;">[];</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">success</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">boolean</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#FFAB70;">logs</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Array</span><span style="color:#E1E4E8;">&lt;</span><span style="color:#B392F0;">BuildMessage</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ResolveMessage</span><span style="color:#E1E4E8;">&gt;;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">declare</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">class</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">ResolveMessage</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">name</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;ResolveMessage&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">position</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#B392F0;">Position</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">null</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">code</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">message</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">referrer</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">specifier</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">importKind</span><span style="color:#F97583;">:</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;entry_point&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;stmt&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;require&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;import&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;dynamic&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;require_resolve&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;at&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;at_conditional&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;url&#39;</span></span>
<span class="line"><span style="color:#E1E4E8;">		</span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;internal&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#F97583;">readonly</span><span style="color:#E1E4E8;"> </span><span style="color:#FFAB70;">level</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;error&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;warning&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;info&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;debug&#39;</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">|</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;verbose&#39;</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">	</span><span style="color:#B392F0;">toString</span><span style="color:#E1E4E8;">()</span><span style="color:#F97583;">:</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">string</span><span style="color:#E1E4E8;">;</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Bun</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">build</span><span style="color:#24292E;">(</span><span style="color:#E36209;">options</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildOptions</span><span style="color:#24292E;">)</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Promise</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">BuildOutput</span><span style="color:#24292E;">&gt;;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildOptions</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">entrypoints</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]; </span><span style="color:#6A737D;">// required</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">outdir</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// default: no write (in-memory only)</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">format</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;esm&#39;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// later: &quot;cjs&quot; | &quot;iife&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">target</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;browser&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;bun&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;node&#39;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// &quot;browser&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">splitting</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// true</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">plugins</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BunPlugin</span><span style="color:#24292E;">[]; </span><span style="color:#6A737D;">// [] // See https://bun.sh/docs/bundler/plugins</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">loader</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> { [</span><span style="color:#6F42C1;">k</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">in</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">]</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Loader</span><span style="color:#24292E;"> }; </span><span style="color:#6A737D;">// See https://bun.sh/docs/bundler/loaders</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">manifest</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">external</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">[]; </span><span style="color:#6A737D;">// []</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">sourcemap</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;none&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;inline&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;external&#39;</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// &quot;none&quot;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">root</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// computed from entrypoints</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">naming</span><span style="color:#D73A49;">?:</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#E36209;">entry</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// &#39;[dir]/[name].[ext]&#39;</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#E36209;">chunk</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// &#39;[name]-[hash].[ext]&#39;</span></span>
<span class="line"><span style="color:#24292E;">				</span><span style="color:#E36209;">asset</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// &#39;[name]-[hash].[ext]&#39;</span></span>
<span class="line"><span style="color:#24292E;">		  };</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">publicPath</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">; </span><span style="color:#6A737D;">// e.g. http://mydomain.com/</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">minify</span><span style="color:#D73A49;">?:</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;"> </span><span style="color:#6A737D;">// false</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">				identifiers</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> boolean;</span></span>
<span class="line"><span style="color:#24292E;">				whitespace</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> boolean;</span></span>
<span class="line"><span style="color:#24292E;">				syntax</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> boolean;</span></span>
<span class="line"><span style="color:#24292E;">		  };</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildOutput</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">outputs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;">[];</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">success</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">logs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">BuildMessage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ResolveMessage</span><span style="color:#24292E;">&gt;;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">extends</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Blob</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">path</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">loader</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Loader</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">hash</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">kind</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;entry-point&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;chunk&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;asset&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;sourcemap&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">sourcemap</span><span style="color:#D73A49;">?:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">type</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Loader</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;js&#39;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;jsx&#39;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ts&#39;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;tsx&#39;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;json&#39;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;toml&#39;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;file&#39;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;napi&#39;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;wasm&#39;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;text&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">interface</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildOutput</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">outputs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">BuildArtifact</span><span style="color:#24292E;">[];</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">success</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">boolean</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#E36209;">logs</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Array</span><span style="color:#24292E;">&lt;</span><span style="color:#6F42C1;">BuildMessage</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ResolveMessage</span><span style="color:#24292E;">&gt;;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">declare</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">class</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">ResolveMessage</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">name</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;ResolveMessage&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">position</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#6F42C1;">Position</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">null</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">code</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">message</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">referrer</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">specifier</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">importKind</span><span style="color:#D73A49;">:</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;entry_point&#39;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;stmt&#39;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;require&#39;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;import&#39;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;dynamic&#39;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;require_resolve&#39;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;at&#39;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;at_conditional&#39;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;url&#39;</span></span>
<span class="line"><span style="color:#24292E;">		</span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;internal&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#D73A49;">readonly</span><span style="color:#24292E;"> </span><span style="color:#E36209;">level</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;error&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;warning&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;info&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;debug&#39;</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">|</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;verbose&#39;</span><span style="color:#24292E;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">	</span><span style="color:#6F42C1;">toString</span><span style="color:#24292E;">()</span><span style="color:#D73A49;">:</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">string</span><span style="color:#24292E;">;</span></span>
<span class="line"><span style="color:#24292E;">}</span></span></code></pre></div>`,212),t=[e];function c(r,y,E,i,d,u){return a(),n("div",null,t)}const g=s(o,[["render",c]]);export{h as __pageData,g as default};
