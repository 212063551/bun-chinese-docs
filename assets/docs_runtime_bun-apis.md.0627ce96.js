import{_ as e,o as a,c as l,Q as s}from"./chunks/framework.400dfe9a.js";const f=JSON.parse('{"title":"Bun APIs","description":"","frontmatter":{},"headers":[],"relativePath":"docs/runtime/bun-apis.md","filePath":"docs/runtime/bun-apis.md","lastUpdated":1696432289000}'),i={name:"docs/runtime/bun-apis.md"},n=s(`<h1 id="bun-apis" tabindex="-1">Bun APIs <a class="header-anchor" href="#bun-apis" aria-label="Permalink to &quot;Bun APIs&quot;">​</a></h1><p>Bun 在 Bun 全局对象上通过许多内置模块实现一组本机 api。这些 api 经过严格优化，代表了实现某些常见功能的规范 “Bun-native” 方式。</p><p>Bun 致力于尽可能实现标准 Web API。Bun 引入了新的 API，主要用于不存在标准的服务器端任务，例如文件 I/O 和启动 HTTP 服务器。在这些情况下，Bun 的方法仍然构建在标准 API 之上，例如 <code>Blob</code>、<code>URL</code> 和 <code>Request</code>。</p><p>这是一个示例</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">Bun.serve(</span><span style="color:#E1E4E8;">{</span></span>
<span class="line"><span style="color:#E1E4E8;">  </span><span style="color:#B392F0;">fetch(req:</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Request</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#F97583;">return</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">new</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">Response</span><span style="color:#E1E4E8;">(</span><span style="color:#B392F0;">&quot;Success!&quot;</span><span style="color:#E1E4E8;">);</span></span>
<span class="line"><span style="color:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#E1E4E8;">});</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">Bun.serve(</span><span style="color:#24292E;">{</span></span>
<span class="line"><span style="color:#24292E;">  </span><span style="color:#6F42C1;">fetch(req:</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Request</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#D73A49;">return</span><span style="color:#24292E;"> </span><span style="color:#032F62;">new</span><span style="color:#24292E;"> </span><span style="color:#032F62;">Response</span><span style="color:#24292E;">(</span><span style="color:#6F42C1;">&quot;Success!&quot;</span><span style="color:#24292E;">);</span></span>
<span class="line"><span style="color:#24292E;">  },</span></span>
<span class="line"><span style="color:#24292E;">});</span></span></code></pre></div><hr><h2 id="http-server" tabindex="-1">HTTP server <a class="header-anchor" href="#http-server" aria-label="Permalink to &quot;HTTP server&quot;">​</a></h2><ul><li><a href="/docs/api/http.html#bun-serve"><code>Bun.serve</code></a></li></ul><h2 id="bundler" tabindex="-1">Bundler <a class="header-anchor" href="#bundler" aria-label="Permalink to &quot;Bundler&quot;">​</a></h2><ul><li><a href="/docs/bundler.html"><code>Bun.build</code></a></li></ul><h2 id="file-i-o" tabindex="-1">File I/O <a class="header-anchor" href="#file-i-o" aria-label="Permalink to &quot;File I/O&quot;">​</a></h2><ul><li><p><a href="/docs/api/file-io.html#reading-files-bun-file"><code>Bun.file</code></a></p></li><li><p><a href="/docs/api/file-io.html#writing-files-bun-write"><code>Bun.write</code></a></p></li></ul><h2 id="child-processes" tabindex="-1">Child processes <a class="header-anchor" href="#child-processes" aria-label="Permalink to &quot;Child processes&quot;">​</a></h2><ul><li><p><a href="/docs/api/spawn.html#spawn-a-process-bun-spawn"><code>Bun.spawn</code></a></p></li><li><p><a href="/docs/api/spawn.html#blocking-api-bun-spawnsync"><code>Bun.spawnSync</code></a></p></li></ul><h2 id="tcp" tabindex="-1">TCP <a class="header-anchor" href="#tcp" aria-label="Permalink to &quot;TCP&quot;">​</a></h2><ul><li><p><a href="/docs/api/tcp.html#start-a-server-bun-listen"><code>Bun.listen</code></a></p></li><li><p><a href="/docs/api/tcp.html#start-a-server-bun-listen"><code>Bun.connect</code></a></p></li></ul><p>##Transpiler</p><ul><li><a href="/docs/api/transpiler.html"><code>Bun.Transpiler</code></a></li></ul><h2 id="routing" tabindex="-1">Routing <a class="header-anchor" href="#routing" aria-label="Permalink to &quot;Routing&quot;">​</a></h2><ul><li><a href="/docs/api/file-system-router.html"><code>Bun.FileSystemRouter</code></a></li></ul><h2 id="html-rewriting" tabindex="-1">HTML Rewriting <a class="header-anchor" href="#html-rewriting" aria-label="Permalink to &quot;HTML Rewriting&quot;">​</a></h2><ul><li><a href="/docs/api/html-rewriter.html"><code>HTMLRewriter</code></a></li></ul><h2 id="hashing" tabindex="-1">Hashing <a class="header-anchor" href="#hashing" aria-label="Permalink to &quot;Hashing&quot;">​</a></h2><ul><li><a href="/docs/api/hashing.html#bun-hash"><code>Bun.hash</code></a></li><li><a href="/docs/api/hashing.html#bun-cryptohasher"><code>Bun.CryptoHasher</code></a></li></ul><h2 id="import-meta" tabindex="-1">i<wbr>mport.meta <a class="header-anchor" href="#import-meta" aria-label="Permalink to &quot;i&lt;wbr&gt;mport.meta&quot;">​</a></h2><ul><li><a href="/docs/api/import-meta.html"><code>i<wbr>mport.meta</code></a></li></ul><h2 id="sqlite" tabindex="-1">SQLite <a class="header-anchor" href="#sqlite" aria-label="Permalink to &quot;SQLite&quot;">​</a></h2><ul><li><a href="/docs/api/sqlite.html"><code>bun:sqlite</code></a></li></ul><h2 id="ffi" tabindex="-1">FFI <a class="header-anchor" href="#ffi" aria-label="Permalink to &quot;FFI&quot;">​</a></h2><ul><li><a href="/docs/api/ffi.html"><code>bun:ffi</code></a></li></ul><h2 id="testing" tabindex="-1">Testing <a class="header-anchor" href="#testing" aria-label="Permalink to &quot;Testing&quot;">​</a></h2><ul><li><a href="/docs/cli/test.html"><code>bun:test</code></a></li></ul><hr><h2 id="node-api" tabindex="-1">Node-API <a class="header-anchor" href="#node-api" aria-label="Permalink to &quot;Node-API&quot;">​</a></h2><ul><li><a href="/docs/api/node-api.html"><code>Node-API</code></a></li></ul><h2 id="utilities" tabindex="-1">Utilities <a class="header-anchor" href="#utilities" aria-label="Permalink to &quot;Utilities&quot;">​</a></h2><ul><li><p><a href="/docs/api/utils.html#bun-version"><code>Bun.version</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-revision"><code>Bun.revision</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-env"><code>Bun.env</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-main"><code>Bun.main</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-sleep"><code>Bun.sleep()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-sleepsync"><code>Bun.sleepSync()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-which"><code>Bun.which()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-peek"><code>Bun.peek()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-openineditor"><code>Bun.openInEditor()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-deepequals"><code>Bun.deepEquals()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-escapehtml"><code>Bun.escapeHTML()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-fileurltopath"><code>Bun.fileURLToPath()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-pathtofileurl"><code>Bun.pathToFileURL()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-gzipsync"><code>Bun.gzipSync()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-gunzipsync"><code>Bun.gunzipSync()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-deflatesync"><code>Bun.deflateSync()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-inflatesync"><code>Bun.inflateSync()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-inspect"><code>Bun.inspect()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-nanoseconds"><code>Bun.nanoseconds()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-readablestreamto"><code>Bun.readableStreamTo*()</code></a></p></li><li><p><a href="/docs/api/utils.html#bun-resolvesync"><code>Bun.resolveSync()</code></a></p></li></ul><hr>`,38),o=[n];function t(p,c,r,d,h,u){return a(),l("div",null,o)}const b=e(i,[["render",t]]);export{f as __pageData,b as default};
